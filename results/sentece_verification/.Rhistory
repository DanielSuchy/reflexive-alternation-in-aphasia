library(tidyverse)
result_columns <- c("time", "ip_adress", "controller_name", "item_number", "element_number", "type", "group", "penn_element_type", "penn_element_name",
"parameter", "value", "event_time", "item-correct_answer-comments")
results <- read.csv("results_20210127_0910.csv", header = FALSE, sep="!", encoding = "UTF-8") #use nonexistent separator to put all results into single column
results <- filter(results, !grepl("#", V1)) #filter out comments
results <- separate(results, V1, into = result_columns, sep=",", extra = "merge") #separate into meaningful columns
results <- separate(results, "item-correct_answer-comments", into=c("item", "correct_answer", "comments"), sep=",", fill = "left") #some rows have extra columns
nrow(table(results$ip_adress))
nrow(table(results$time))
demographics <- filter(results, penn_element_name=="demographics")
demographics <- data.frame(ip_adress=demographics$ip_adress, parameter=demographics$parameter, value=demographics$value) #relevant columns
demographics_tidy <- spread(demographics, parameter, value) #put variables into columns
demographics_tidy$age <- extract_numeric(demographics_tidy$age)
demographics_tidy <- mutate(demographics_tidy, gender=ifelse(gender == "žena", "F", as.character(gender))) # should change this in the PCIbex script
mean(demographics_tidy$age)
comments <- filter(results, parameter=="Final")
scales <- filter(results, parameter == "Choice", type == "experiment") # multiple choice answers that aren't practice
nrow(scales)
correct <- filter(scales, (value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))
incorrect <- filter(scales, (value=="dává smysl" & correct_answer==FALSE) | (value=="nedává smysl" & correct_answer==TRUE))
not_sure <- filter(scales, value=="nejsem si jistá/ý")
incorrect_freq <- as.data.frame(table(incorrect$item))
incorrect_freq[order(incorrect_freq$Freq, decreasing = TRUE),]
judged_false <- filter(incorrect, value=="nedává smysl")
judged_false_freq <- as.data.frame(table(judged_false$item))
judged_false_freq[order(judged_false_freq$Freq, decreasing = TRUE),]
judged_true <- filter(incorrect, value=="dává smysl")
judged_true_freq <- as.data.frame(table(judged_true$item))
judged_true_freq[order(judged_true_freq$Freq, decreasing = TRUE),]
not_sure_freq <- as.data.frame(table(not_sure$item))
not_sure_freq[order(not_sure_freq$Freq, decreasing = TRUE),]
RA_sentences <- filter(scales, grepl("_RA", item))
RA_correct <- filter(RA_sentences, (value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))
RA_incorrect <- filter(RA_sentences, (value=="dává smysl" & correct_answer==FALSE) | (value=="nedává smysl" & correct_answer==TRUE))
RA_confusing <- filter(RA_sentences, !((value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))) #incorrect or unsure
start_times <- filter(results, value=="Start" & type == "experiment") # start of each experimental item
end_times <- filter(results, value=="End" & type == "experiment") # end of each experimental item
times <- merge(x = start_times, y = end_times, by=c("item", "ip_adress"))
times$difference <- as.numeric(times$event_time.y) - as.numeric(times$event_time.x)
times_simple <- data.frame(ip = times$ip_adress, start=times$event_time.x, end=times$event_time.y, diff=times$difference, item=times$item)
mean(times_simple$diff)
sd(times_simple$diff)
mean(filter(times_simple, grepl("_TG", times_simple$item))$diff)
mean(filter(times_simple, grepl("_TA", times_simple$item))$diff)
mean(filter(times_simple, grepl("_RG", times_simple$item))$diff)
mean(filter(times_simple, grepl("_RA", times_simple$item))$diff)
library(tidyverse)
result_columns <- c("time", "ip_adress", "controller_name", "item_number", "element_number", "type", "group", "penn_element_type", "penn_element_name",
"parameter", "value", "event_time", "item-correct_answer-comments")
results <- read.csv("results_20210127_0910.csv", header = FALSE, sep="!", encoding = "UTF-8") #use nonexistent separator to put all results into single column
results <- filter(results, !grepl("#", V1)) #filter out comments
results <- separate(results, V1, into = result_columns, sep=",", extra = "merge") #separate into meaningful columns
results <- separate(results, "item-correct_answer-comments", into=c("item", "correct_answer", "comments"), sep=",", fill = "left") #some rows have extra columns
nrow(table(results$ip_adress))
nrow(table(results$time))
demographics <- filter(results, penn_element_name=="demographics")
demographics <- data.frame(ip_adress=demographics$ip_adress, parameter=demographics$parameter, value=demographics$value) #relevant columns
demographics_tidy <- spread(demographics, parameter, value) #put variables into columns
demographics_tidy$age <- extract_numeric(demographics_tidy$age)
demographics_tidy <- mutate(demographics_tidy, gender=ifelse(gender == "žena", "F", as.character(gender))) # should change this in the PCIbex script
mean(demographics_tidy$age)
comments <- filter(results, parameter=="Final")
scales <- filter(results, parameter == "Choice", type == "experiment") # multiple choice answers that aren't practice
nrow(scales)
correct <- filter(scales, (value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))
incorrect <- filter(scales, (value=="dává smysl" & correct_answer==FALSE) | (value=="nedává smysl" & correct_answer==TRUE))
not_sure <- filter(scales, value=="nejsem si jistá/ý")
incorrect_freq <- as.data.frame(table(incorrect$item))
incorrect_freq[order(incorrect_freq$Freq, decreasing = TRUE),]
judged_false <- filter(incorrect, value=="nedává smysl")
judged_false_freq <- as.data.frame(table(judged_false$item))
judged_false_freq[order(judged_false_freq$Freq, decreasing = TRUE),]
judged_true <- filter(incorrect, value=="dává smysl")
judged_true_freq <- as.data.frame(table(judged_true$item))
judged_true_freq[order(judged_true_freq$Freq, decreasing = TRUE),]
not_sure_freq <- as.data.frame(table(not_sure$item))
not_sure_freq[order(not_sure_freq$Freq, decreasing = TRUE),]
RA_sentences <- filter(scales, grepl("_RA", item))
RA_correct <- filter(RA_sentences, (value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))
RA_incorrect <- filter(RA_sentences, (value=="dává smysl" & correct_answer==FALSE) | (value=="nedává smysl" & correct_answer==TRUE))
RA_confusing <- filter(RA_sentences, !((value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))) #incorrect or unsure
start_times <- filter(results, value=="Start" & type == "experiment") # start of each experimental item
end_times <- filter(results, value=="End" & type == "experiment") # end of each experimental item
times <- merge(x = start_times, y = end_times, by=c("item", "ip_adress"))
times$difference <- as.numeric(times$event_time.y) - as.numeric(times$event_time.x)
times_simple <- data.frame(ip = times$ip_adress, start=times$event_time.x, end=times$event_time.y, diff=times$difference, item=times$item)
mean(times_simple$diff)
sd(times_simple$diff)
mean(filter(times_simple, grepl("_TG", times_simple$item))$diff)
mean(filter(times_simple, grepl("_TA", times_simple$item))$diff)
mean(filter(times_simple, grepl("_RG", times_simple$item))$diff)
mean(filter(times_simple, grepl("_RA", times_simple$item))$diff)
library(tidyverse)
result_columns <- c("time", "ip_adress", "controller_name", "item_number", "element_number", "type", "group", "penn_element_type", "penn_element_name",
"parameter", "value", "event_time", "item-correct_answer-comments")
results <- read.csv("results_20210127_0910.csv", header = FALSE, sep="!", encoding = "UTF-8") #use nonexistent separator to put all results into single column
results <- filter(results, !grepl("#", V1)) #filter out comments
results <- separate(results, V1, into = result_columns, sep=",", extra = "merge") #separate into meaningful columns
results <- separate(results, "item-correct_answer-comments", into=c("item", "correct_answer", "comments"), sep=",", fill = "left") #some rows have extra columns
nrow(table(results$ip_adress))
nrow(table(results$time))
demographics <- filter(results, penn_element_name=="demographics")
demographics <- data.frame(ip_adress=demographics$ip_adress, parameter=demographics$parameter, value=demographics$value) #relevant columns
demographics_tidy <- spread(demographics, parameter, value) #put variables into columns
demographics_tidy$age <- extract_numeric(demographics_tidy$age)
demographics_tidy <- mutate(demographics_tidy, gender=ifelse(gender == "žena", "F", as.character(gender))) # should change this in the PCIbex script
mean(demographics_tidy$age)
comments <- filter(results, parameter=="Final")
scales <- filter(results, parameter == "Choice", type == "experiment") # multiple choice answers that aren't practice
nrow(scales)
correct <- filter(scales, (value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))
incorrect <- filter(scales, (value=="dává smysl" & correct_answer==FALSE) | (value=="nedává smysl" & correct_answer==TRUE))
not_sure <- filter(scales, value=="nejsem si jistá/ý")
incorrect_freq <- as.data.frame(table(incorrect$item))
incorrect_freq[order(incorrect_freq$Freq, decreasing = TRUE),]
judged_false <- filter(incorrect, value=="nedává smysl")
judged_false_freq <- as.data.frame(table(judged_false$item))
judged_false_freq[order(judged_false_freq$Freq, decreasing = TRUE),]
judged_true <- filter(incorrect, value=="dává smysl")
judged_true_freq <- as.data.frame(table(judged_true$item))
judged_true_freq[order(judged_true_freq$Freq, decreasing = TRUE),]
not_sure_freq <- as.data.frame(table(not_sure$item))
not_sure_freq[order(not_sure_freq$Freq, decreasing = TRUE),]
RA_sentences <- filter(scales, grepl("_RA", item))
RA_correct <- filter(RA_sentences, (value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))
RA_incorrect <- filter(RA_sentences, (value=="dává smysl" & correct_answer==FALSE) | (value=="nedává smysl" & correct_answer==TRUE))
RA_confusing <- filter(RA_sentences, !((value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))) #incorrect or unsure
start_times <- filter(results, value=="Start" & type == "experiment") # start of each experimental item
end_times <- filter(results, value=="End" & type == "experiment") # end of each experimental item
times <- merge(x = start_times, y = end_times, by=c("item", "ip_adress"))
times$difference <- as.numeric(times$event_time.y) - as.numeric(times$event_time.x)
times_simple <- data.frame(ip = times$ip_adress, start=times$event_time.x, end=times$event_time.y, diff=times$difference, item=times$item)
mean(times_simple$diff)
sd(times_simple$diff)
mean(filter(times_simple, grepl("_TG", times_simple$item))$diff)
mean(filter(times_simple, grepl("_TA", times_simple$item))$diff)
mean(filter(times_simple, grepl("_RG", times_simple$item))$diff)
mean(filter(times_simple, grepl("_RA", times_simple$item))$diff)
library(tidyverse)
library(data.table)
sentences <- read.csv("sentence_group_1.csv", encoding = "UTF-8", sep=";")
library(tidyverse)
result_columns <- c("time", "ip_adress", "controller_name", "item_number", "element_number", "type", "group", "penn_element_type", "penn_element_name",
"parameter", "value", "event_time", "item-correct_answer-comments")
results <- read.csv("results_20210127_0910.csv", header = FALSE, sep="!", encoding = "UTF-8") #use nonexistent separator to put all results into single column
results <- filter(results, !grepl("#", V1)) #filter out comments
results <- separate(results, V1, into = result_columns, sep=",", extra = "merge") #separate into meaningful columns
results <- separate(results, "item-correct_answer-comments", into=c("item", "correct_answer", "comments"), sep=",", fill = "left") #some rows have extra columns
nrow(table(results$ip_adress))
nrow(table(results$time))
demographics <- filter(results, penn_element_name=="demographics")
demographics <- data.frame(ip_adress=demographics$ip_adress, parameter=demographics$parameter, value=demographics$value) #relevant columns
demographics_tidy <- spread(demographics, parameter, value) #put variables into columns
demographics_tidy$age <- extract_numeric(demographics_tidy$age)
demographics_tidy <- mutate(demographics_tidy, gender=ifelse(gender == "žena", "F", as.character(gender))) # should change this in the PCIbex script
mean(demographics_tidy$age)
comments <- filter(results, parameter=="Final")
scales <- filter(results, parameter == "Choice", type == "experiment") # multiple choice answers that aren't practice
nrow(scales)
correct <- filter(scales, (value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))
incorrect <- filter(scales, (value=="dává smysl" & correct_answer==FALSE) | (value=="nedává smysl" & correct_answer==TRUE))
not_sure <- filter(scales, value=="nejsem si jistá/ý")
incorrect_freq <- as.data.frame(table(incorrect$item))
incorrect_freq[order(incorrect_freq$Freq, decreasing = TRUE),]
judged_false <- filter(incorrect, value=="nedává smysl")
judged_false_freq <- as.data.frame(table(judged_false$item))
judged_false_freq[order(judged_false_freq$Freq, decreasing = TRUE),]
judged_true <- filter(incorrect, value=="dává smysl")
judged_true_freq <- as.data.frame(table(judged_true$item))
judged_true_freq[order(judged_true_freq$Freq, decreasing = TRUE),]
not_sure_freq <- as.data.frame(table(not_sure$item))
not_sure_freq[order(not_sure_freq$Freq, decreasing = TRUE),]
RA_sentences <- filter(scales, grepl("_RA", item))
RA_correct <- filter(RA_sentences, (value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))
RA_incorrect <- filter(RA_sentences, (value=="dává smysl" & correct_answer==FALSE) | (value=="nedává smysl" & correct_answer==TRUE))
RA_confusing <- filter(RA_sentences, !((value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))) #incorrect or unsure
start_times <- filter(results, value=="Start" & type == "experiment") # start of each experimental item
end_times <- filter(results, value=="End" & type == "experiment") # end of each experimental item
times <- merge(x = start_times, y = end_times, by=c("item", "ip_adress"))
times$difference <- as.numeric(times$event_time.y) - as.numeric(times$event_time.x)
times_simple <- data.frame(ip = times$ip_adress, start=times$event_time.x, end=times$event_time.y, diff=times$difference, item=times$item)
mean(times_simple$diff)
sd(times_simple$diff)
mean(filter(times_simple, grepl("_TG", times_simple$item))$diff)
mean(filter(times_simple, grepl("_TA", times_simple$item))$diff)
mean(filter(times_simple, grepl("_RG", times_simple$item))$diff)
mean(filter(times_simple, grepl("_RA", times_simple$item))$diff)
View(demographics_tidy)
View(demographics_tidy)
library(tidyverse)
result_columns <- c("time", "ip_adress", "controller_name", "item_number", "element_number", "type", "group", "penn_element_type", "penn_element_name",
"parameter", "value", "event_time", "item-correct_answer-comments")
results <- read.csv("results_20210127_0910.csv", header = FALSE, sep="!", encoding = "UTF-8") #use nonexistent separator to put all results into single column
results <- filter(results, !grepl("#", V1)) #filter out comments
results <- separate(results, V1, into = result_columns, sep=",", extra = "merge") #separate into meaningful columns
results <- separate(results, "item-correct_answer-comments", into=c("item", "correct_answer", "comments"), sep=",", fill = "left") #some rows have extra columns
scales <- filter(results, parameter == "Choice", type == "experiment") # multiple choice answers that aren't practice
nrow(scales)
correct <- filter(scales, (value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE))
incorrect <- filter(scales, (value=="dává smysl" & correct_answer==FALSE) | (value=="nedává smysl" & correct_answer==TRUE))
not_sure <- filter(scales, value=="nejsem si jistá/ý")
122+52
4306-174
4132 / 4306
confusing <- filter(scales, !((value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE)))
confusing$item
?strsplit
strsplit(confusing$item, "_")
strsplit(confusing$item, "_")[[2]]
strsplit(confusing$item, "_")[2]
strsplit(confusing$item, "_")[[1]]
strsplit(confusing$item, "_")[,]
strsplit(confusing$item, "_")[,1]
strsplit(confusing$item, "_")[1,1]
strsplit(confusing$item, "_")[[1,1]]
strsplit(confusing$item, "_")
?sapply
unlist(strsplit(confusing$item, "_"))
unlist(strsplit(confusing$item, "_"))[1]
sapply(strsplit(confusing,"-"), `[`, 1)
strsplit(confusing,"-")
strsplit(confusing, "_")
strsplit(confusing$item, "_")
sapply(strsplit(confusing$item, "_"), `[`, 1)
sapply(strsplit(confusing$item, "_"), `[`, 2)
confusing <- filter(scales, !((value=="dává smysl" & correct_answer==TRUE) | (value=="nedává smysl" & correct_answer==FALSE)))
confusing_type <- sapply(strsplit(confusing$item, "_"), `[`, 2)
table(confusing_type)
32*4
library(tidyverse)
result_columns <- c("time", "ip_adress", "controller_name", "item_number", "element_number", "type", "group", "penn_element_type", "penn_element_name",
"parameter", "value", "event_time", "item-correct_answer-comments")
results <- read.csv("results_20210127_0910.csv", header = FALSE, sep="!", encoding = "UTF-8") #use nonexistent separator to put all results into single column
results <- filter(results, !grepl("#", V1)) #filter out comments
results <- separate(results, V1, into = result_columns, sep=",", extra = "merge") #separate into meaningful columns
results <- separate(results, "item-correct_answer-comments", into=c("item", "correct_answer", "comments"), sep=",", fill = "left") #some rows have extra columns
scales <- filter(results, parameter == "Choice", type == "experiment") # multiple choice answers that aren't practice
View(results)
View(results)
View(scales)
View(scales)
answers <- data.frame(answer = scales$value, scales$correct_answer, scales$item)
View(answers)
View(answers)
View(answers)
View(answers)
answers <- data.frame(answer = scales$value, correct_answer = scales$correct_answer, item = scales$item)
strsplit(answers$item, "_")
strsplit(answers$item, "a")
?strsplit
answers <- data.frame(answer = scales$value, correct_answer = scales$correct_answer, item = scales$item)
strsplit(answers$item, "_")
strsplit(c(answers$item), "_")
sapply(strsplit(answers$item ,"-"), `[`, 1)
answers <- data.frame(answer = scales$value, correct_answer = scales$correct_answer, item = scales$item)
sapply(strsplit(as.character(answers$item),"-"), `[`, 1)
answers <- data.frame(answer = scales$value, correct_answer = scales$correct_answer, item = scales$item)
sapply(strsplit(as.character(answers$item),"_"), `[`, 1)
answers <- data.frame(answer = scales$value, correct_answer = scales$correct_answer, item = scales$item)
sapply(strsplit(as.character(answers$item),"_"), `[`, 2)
answers <- data.frame(answer = scales$value, correct_answer = scales$correct_answer, item = scales$item)
answers$sentence_type <- sapply(strsplit(as.character(answers$item),"_"), `[`, 2)
View(answers)
View(answers)
data.frame(answers$answer, answers$sentence_type)
table(data.frame(answers$answer, answers$sentence_type))
12 +82 +20+8+1+4+3
12 +82 +20+8+1+4+3+44
12 +82 +20+8
